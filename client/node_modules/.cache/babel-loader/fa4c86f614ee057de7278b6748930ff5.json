{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport { GET_POSTS, CREATE_POST, DELETE_POST, UPDATE_LIKES, POST_ERROR } from './types'; //Create post\n\nexport const createPost = post => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:5000/api/post', post);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post succesfully create', 'sucess'));\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create post\n\nexport const getPosts = () => async dispatch => {\n  try {\n    console.log('ab');\n    const res = await axios.get('http://localhost:5000/api/post');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.post(`http://localhost:5000/api/post/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.post(`http://localhost:5000/api/post/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/post/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/DevConnectors/client/src/actions/posts.js"],"names":["axios","setAlert","GET_POSTS","CREATE_POST","DELETE_POST","UPDATE_LIKES","POST_ERROR","createPost","post","dispatch","res","type","payload","data","err","console","log","response","msg","statusText","status","getPosts","get","addLike","postId","likes","removeLike","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from '../actions/alert';\r\n\r\nimport {\r\n    GET_POSTS,\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    UPDATE_LIKES,\r\n    POST_ERROR\r\n} from './types';\r\n\r\n\r\n//Create post\r\nexport const createPost = (post) => async dispatch => {\r\n    try{\r\n       const res = await axios.post('http://localhost:5000/api/post',post)\r\n\r\n       dispatch({\r\n        type: CREATE_POST,\r\n        payload:res.data\r\n    });\r\n\r\n    dispatch( \r\n        setAlert('Post succesfully create','sucess')\r\n    )\r\n\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n\r\n//Create post\r\nexport const getPosts = () => async dispatch => {\r\n    try{\r\n      console.log('ab')\r\n       const res = await axios.get('http://localhost:5000/api/post')\r\n       dispatch({\r\n           type: GET_POSTS,\r\n           payload: res.data\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n\r\n//Add like\r\nexport const addLike = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.post(`http://localhost:5000/api/post/like/${postId}`)\r\n       dispatch({\r\n           type: UPDATE_LIKES,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n//Remove like\r\nexport const removeLike = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.post(`http://localhost:5000/api/post/unlike/${postId}`)\r\n       dispatch({\r\n           type: UPDATE_LIKES,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n//Delete post\r\nexport const deletePost = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.delete(`http://localhost:5000/api/post/${postId}`)\r\n       dispatch({\r\n           type: DELETE_POST,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}