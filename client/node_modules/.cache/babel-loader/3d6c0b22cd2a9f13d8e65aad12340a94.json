{"ast":null,"code":"import { GET_POSTS, POST_ERROR, CREATE_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case CREATE_POST:\n      const newPostsArray = state.posts.slice().push(payload);\n      return { ...state,\n        posts: newPostsArray,\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/DevConnectors/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","CREATE_POST","initialState","posts","loading","error","state","action","type","payload","newPostsArray","slice","push"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA8BC,WAA9B,QAAgD,kBAAhD;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAC,EADY;AAElBC,EAAAA,OAAO,EAAE,IAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAsC;AACjD,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBF,MAAvB;;AACA,UAAOC,IAAP;AACI,SAAKT,SAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,KAAK,EAAEM,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKH,WAAL;AACI,YAAMS,aAAa,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,KAAZ,GAAoBC,IAApB,CAAyBH,OAAzB,CAAtB;AACA,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,KAAK,EAAEO,aAFJ;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,UAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOE,KAAP;AArBR;AAuBH","sourcesContent":["import {GET_POSTS, POST_ERROR,CREATE_POST} from '../actions/types'\r\n\r\nconst initialState = {\r\n   posts:[],\r\n   loading: true,\r\n   error: {}\r\n}\r\n\r\n\r\nexport default function(state = initialState ,action){\r\n    const {type,payload} = action;\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case CREATE_POST:\r\n            const newPostsArray = state.posts.slice().push(payload)\r\n            return {\r\n                ...state,\r\n                posts: newPostsArray,\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}