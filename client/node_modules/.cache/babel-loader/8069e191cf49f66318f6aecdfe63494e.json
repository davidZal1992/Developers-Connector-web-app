{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\profile\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../../spinner/Spinner';\nimport { getProfileById } from '../../../actions/profile';\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), \"profile\");\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/profile/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Profile","match","profile","loading","auth","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOF,EAAAA,cAAP;AAAuBG,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAhC;AAAmDC,EAAAA;AAAnD,CAAD,KAA8D;AAC1ET,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEP,CAACP,cAAD,CAFO,CAAT;AAGA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,YADJ;AAMH,CAVD;;AAaAC,OAAO,CAACO,SAAR,GAAoB;AAChBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADf;AAEhBP,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAFV;AAGhBL,EAAAA,IAAI,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAHP,CAApB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADiB;AAEhCE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACc,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,OAA3C,CAAf","sourcesContent":["import React, { Fragment,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../spinner/Spinner';\r\nimport {getProfileById} from '../../../actions/profile'\r\n\r\nconst Profile = ({match,getProfileById, profile: {profile,loading} ,auth}) => {\r\n    useEffect(() =>{\r\n        getProfileById(match.params.id)\r\n    },[getProfileById])\r\n    return (\r\n        <Fragment>\r\n            <Spinner/>\r\n           profile \r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {getProfileById})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}