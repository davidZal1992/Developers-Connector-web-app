{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\profile\\\\profile-repos\\\\ProfileRepos.js\";\nimport React, { Component, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../../actions/profile';\nimport Spinner from '../../spinner/Spinner';\n\nconst ProfileRepos = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Github Repos\"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }\n  }) : repos.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    key: repo.id,\n    className: \"repo bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, repo.name))))), \"hello\");\n};\n\nProfileRepos.propTypes = {\n  username: PropTypes.string.isRequired,\n  getGithubRepos: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileRepos);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/profile/profile-repos/ProfileRepos.js"],"names":["React","Component","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileRepos","username","repos","map","repo","id","html_url","name","propTypes","string","isRequired","func","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUH,EAAAA,cAAV;AAAyBI,EAAAA;AAAzB,CAAD,KAAqC;AACtDP,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACH,GAFQ,EAEN,CAACH,cAAc,CAACG,QAAD,CAAf,CAFM,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAESC,KAAK,KAAK,IAAV,gBAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACDA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACV;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmEF,IAAI,CAACG,IAAxE,CADJ,CADL,CADH,CADJ,CAHR,UADJ;AAmBH,CAvBD;;AAyBAP,YAAY,CAACQ,SAAb,GAAyB;AACrBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UADN;AAErBZ,EAAAA,cAAc,EAAEF,SAAS,CAACe,IAAV,CAAeD;AAFV,CAAzB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAW;AAC/BX,EAAAA,KAAK,EAAEW,KAAK,CAACC,OAAN,CAAcZ;AADU,CAAX,CAAxB;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,YAA3C,CAAf","sourcesContent":["import React, { Component,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {getGithubRepos} from '../../../actions/profile'\r\nimport Spinner from '../../spinner/Spinner'\r\n\r\nconst ProfileRepos = ({username,getGithubRepos,repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [getGithubRepos(username)])\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className='text-primary my-1'>Github Repos</h2>\r\n                {repos === null ? <Spinner/> : (\r\n                repos.map(repo =>(\r\n                    <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                       <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a>\r\n                            </h4>\r\n                        </div> \r\n                    </div>\r\n                ))\r\n                )\r\n\r\n                }\r\n            hello\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileRepos.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    getGithubRepos: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileRepos)\r\n"]},"metadata":{},"sourceType":"module"}