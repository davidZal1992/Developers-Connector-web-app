{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\auth\\\\Register\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Register.css';\nimport { setAlert } from '../../../actions/alert';\nimport { register } from '../../../actions/auth';\nimport Alert from '../../Alert/Alert';\nimport SocialLogin from '../SocialLogin/SocialLogin';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const [formDate, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formDate;\n\n  const handleChange = e => setFormData({ ...formDate,\n    [e.target.name]: e.target.value\n  }); //Save the values of inputs and change immutable state\n\n\n  const submitDetails = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Password do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      }); //If Authenticated redirect to dashboard page\n\n      if (isAuthenticated) {\n        /*#__PURE__*/\n        React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), \"Create Your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"dashboard.html\",\n    onSubmit: submitDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: handleChange,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 46\n    }\n  }, \"Sign in\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SocialLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"OR\")));\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(null, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/auth/Register/Register.js"],"names":["React","Fragment","useState","Link","connect","setAlert","register","Alert","SocialLogin","Register","isAuthenticated","formDate","setFormData","name","email","password","password2","handleChange","e","target","value","submitDetails","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React,{Fragment , useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Register.css'\r\n\r\nimport {setAlert} from '../../../actions/alert';\r\nimport {register} from '../../../actions/auth';\r\n\r\nimport Alert from '../../Alert/Alert';\r\nimport SocialLogin from '../SocialLogin/SocialLogin'\r\n\r\n\r\n const Register = ({setAlert , register, isAuthenticated}) => {\r\n    const [formDate,setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n    const {name,email,password,password2} = formDate;\r\n    const handleChange = e => setFormData({...formDate,[e.target.name]:e.target.value})  //Save the values of inputs and change immutable state\r\n\r\n    const submitDetails = async e => {\r\n        e.preventDefault();\r\n        if(password !==password2){\r\n        setAlert('Password do not match','danger');\r\n        }\r\n        else{\r\n        register({name,email,password})\r\n\r\n        //If Authenticated redirect to dashboard page\r\n        if(isAuthenticated){\r\n        <Redirect to=\"/dashboard\"/>\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n        <div className=\"container\">\r\n            <div className=\"left-box\">\r\n                <Alert/>\r\n                <h1 className=\"large text-primary\">Sign In</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    Create Your Account\r\n                </p>\r\n                <form action=\"dashboard.html\" onSubmit={submitDetails}>\r\n                        <input type=\"text\" placeholder=\"Name\" name='name' value={name} onChange={handleChange} />\r\n                        <input type=\"email\" placeholder=\"Email\" name='email' value={email}  onChange={handleChange}  />\r\n                        <input type=\"password\" placeholder=\"Password\" name='password' value={password} onChange={handleChange} minLength=\"6\" />\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" name='password2' value={password2} onChange={handleChange}  minLength=\"6\" />\r\n                        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account? <Link to=\"/login\">Sign in</Link>\r\n                </p>\r\n            </div>\r\n            <div className=\"right-box\">\r\n                <SocialLogin/>\r\n            </div>\r\n            <div className=\"or\">OR</div>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(null,{setAlert,register})(Register);"]},"metadata":{},"sourceType":"module"}