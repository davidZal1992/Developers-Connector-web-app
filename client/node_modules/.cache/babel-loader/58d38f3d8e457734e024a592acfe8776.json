{"ast":null,"code":"import axios from 'axios';\nimport { setAlert, removeAlert } from '../actions/alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR, CLEAR_PROFILE, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //Load User\n\nexport const loadUser = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  if (token) setAuthToken(token);\n\n  try {\n    const res = await axios.get('http://localhost:5000/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:5000/api/users', {\n      name: name,\n      email: email,\n      password: password\n    });\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n    dispatch(removeAlert());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      dispatch(setAlert(errors[0].msg, 'danger'));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //Login-in User\n\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:5000/api/auth', {\n      email: email,\n      password: password\n    });\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n    dispatch(removeAlert());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      dispatch(setAlert(errors[0].msg, 'danger'));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //Logout User\n\nexport const logout = ({\n  email,\n  password\n}) => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["D:/DevConnectors/client/src/actions/auth.js"],"names":["axios","setAlert","removeAlert","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERROR","CLEAR_PROFILE","LOGOUT","setAuthToken","loadUser","dispatch","token","localStorage","getItem","res","get","type","payload","data","err","console","log","response","register","name","email","password","post","errors","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert,removeAlert} from '../actions/alert';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    CLEAR_PROFILE,\r\n    LOGOUT\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if(token)\r\n        setAuthToken(token)\r\n    try{\r\n       const res = await axios.get('http://localhost:5000/api/auth')\r\n       dispatch({\r\n           type: USER_LOADED,\r\n           payload: res.data\r\n       })\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n\r\n//Register User\r\nexport const register = ( {name,email,password}) => async dispatch => {\r\n    \r\n    try{\r\n        const res = await axios.post('http://localhost:5000/api/users',{name: name, email:email, password:password});\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser())\r\n        dispatch(removeAlert())\r\n\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n        dispatch(setAlert(errors[0].msg,'danger'))\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n//Login-in User\r\nexport const login = ( {email,password}) => async dispatch => {\r\n    \r\n    try{\r\n        const res = await axios.post('http://localhost:5000/api/auth',{email:email, password:password});\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser())\r\n        dispatch(removeAlert())\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n        dispatch(setAlert(errors[0].msg,'danger'))\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n\r\n//Logout User\r\nexport const logout = ( {email,password}) => async dispatch => {\r\n    dispatch({type: CLEAR_PROFILE})\r\n    dispatch({type: LOGOUT})\r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}