{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\posts\\\\post\\\\Post.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../../spinner/Spinner';\nimport { Link } from 'react-router-dom';\nimport PostItem from '../../../components/posts/post-item/PostItem';\nimport CommentForm from '../comment/comment-form/CommentForm';\nimport CommentItem from '../comment/comment-item/CommentItem';\nimport { getPost } from '../../../actions/posts';\nimport Alert from '../../../components/alert/Alert';\n\nconst Post = ({\n  match,\n  post: {\n    post,\n    loading\n  },\n  getPost\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-alert my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  })), loading || post == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Back to Posts\"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CommentForm, {\n    postId: match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, post.comments.length > 0 && post.comments.map(comment => /*#__PURE__*/React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  })))));\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/posts/post/Post.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","Link","PostItem","CommentForm","CommentItem","getPost","Alert","Post","match","post","loading","params","id","comments","length","map","comment","_id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,IAAI,EAAC;AAACA,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAZ;AAA2BL,EAAAA;AAA3B,CAAD,KAAyC;AAClDT,EAAAA,SAAS,CAAC,MAAK;AACXS,IAAAA,OAAO,CAACG,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEP,CAACP,OAAD,EAASG,KAAT,CAFO,CAAT;AAIA,sBACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADJ,EAKIE,OAAO,IAAID,IAAI,IAAE,IAAjB,gBAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,gBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAED,KAAK,CAACG,MAAN,CAAaC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACI,QAAL,CAAcC,MAAd,GAAuB,CAAvB,IAA4BL,IAAI,CAACI,QAAL,CAAcE,GAAd,CAAkBC,OAAO,iBACjD,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA1B;AAA+B,IAAA,OAAO,EAAED,OAAxC;AAAiD,IAAA,MAAM,EAAEP,IAAI,CAACQ,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB,CADjC,CAJJ,CANJ,CADJ;AAsBH,CA3BD;;AA6BAV,IAAI,CAACW,SAAL,GAAiB;AACbT,EAAAA,IAAI,EAACX,SAAS,CAACqB,MAAV,CAAiBC,UADT;AAEbf,EAAAA,OAAO,EAACP,SAAS,CAACuB,IAAV,CAAeD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAI;AAC7Bd,EAAAA,IAAI,EAACc,KAAK,CAACd;AADkB,CAAJ,CAA7B;;AAIA,eAAeV,OAAO,CAACuB,eAAD,EAAiB;AAACjB,EAAAA;AAAD,CAAjB,CAAP,CAAmCE,IAAnC,CAAf","sourcesContent":["import React ,{useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../spinner/Spinner'\r\nimport {Link} from 'react-router-dom'\r\nimport PostItem from '../../../components/posts/post-item/PostItem'\r\nimport CommentForm from '../comment/comment-form/CommentForm'\r\nimport CommentItem from '../comment/comment-item/CommentItem'\r\nimport { getPost } from '../../../actions/posts'\r\nimport Alert from '../../../components/alert/Alert'\r\n\r\nconst Post = ({match,post:{post,loading},getPost}) => {\r\n    useEffect(() =>{\r\n        getPost(match.params.id)\r\n    },[getPost,match])\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <div className=\"show-alert my-1\">\r\n                    <Alert/>\r\n                </div>\r\n            {\r\n            loading || post==null ? <Spinner/> :(\r\n            <Fragment>\r\n                <Link to='/posts' className='btn'>Back to Posts</Link>\r\n                <PostItem post={post} showActions={false}/>\r\n                <CommentForm postId={match.params.id}/>\r\n                <div className=\"comments\">\r\n                    {post.comments.length > 0 && post.comments.map(comment =>(\r\n                         <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                    ))\r\n                    }\r\n                </div>\r\n             </Fragment>\r\n            )\r\n             }\r\n        </section>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    post:PropTypes.object.isRequired,\r\n    getPost:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    post:state.post\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost})(Post)\r\n"]},"metadata":{},"sourceType":"module"}