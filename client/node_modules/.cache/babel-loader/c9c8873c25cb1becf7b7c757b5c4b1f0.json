{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport { GET_PROFILE, CREATE_PROFILE, GET_REPOS, UPDATE_PROFILE, GET_PROFILES, CLEAR_PROFILE, ACCOUNT_DELETED, PROFILE_ERROR } from './types'; // Get current users profile\n\nexport const loadProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create and Update profile\n\nexport const createProfile = (formData, history, imageProfile, edit = false) => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:5000/api/profile', formData);\n    dispatch({\n      type: CREATE_PROFILE,\n      payload: res.data\n    });\n    console.log();\n\n    if (imageProfile.has('imageProfile')) {\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      await axios.post(\"http://localhost:5000/api/profile/upload\", imageProfile, config);\n    }\n\n    if (!edit) {\n      dispatch(setAlert(\"Profile created\", 'success'));\n      history.push('/dashboard');\n    } else {\n      dispatch(setAlert(\"Profile edited\", 'success'));\n    }\n  } catch (err) {\n    if (err.response.data.errors) {\n      const errors = err.response.data;\n      console.log(errors.errors);\n      dispatch(setAlert(errors.errors[0].msg, 'danger'));\n    } else {\n      const str = err.response.data;\n      let newErr = str.substring(str.lastIndexOf(\"Error:\") + 7, str.indexOf(\"<br>\"));\n      dispatch(setAlert(newErr, 'danger'));\n    }\n  }\n}; // Add Experince\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:5000/api/profile/experience', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      dispatch(setAlert(errors[0].msg, 'danger'));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:5000/api/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(err.response);\n\n    if (errors) {\n      dispatch(setAlert(errors[0].msg, 'danger'));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experince\n\nexport const deleteExperience = expId => async dispatch => {\n  try {\n    const res = await axios.delete('http://localhost:5000/api/profile/experience/' + expId);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience deleted\", 'success'));\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = eduId => async dispatch => {\n  try {\n    const res = await axios.delete('http://localhost:5000/api/profile/education/' + eduId);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education deleted\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(`Are you sure you want to delete your account? After that you can't UNDO operation`)) {\n    try {\n      await axios.delete('http://localhost:5000/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile');\n    console.log(res);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by id\n\nexport const getProfileById = profileId => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/user/' + profileId);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get repos of user\n\nexport const getGithubRepos = profileId => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/github/' + profileId);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/DevConnectors/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","CREATE_PROFILE","GET_REPOS","UPDATE_PROFILE","GET_PROFILES","CLEAR_PROFILE","ACCOUNT_DELETED","PROFILE_ERROR","loadProfile","dispatch","res","get","type","payload","data","err","console","log","response","msg","statusText","status","createProfile","formData","history","imageProfile","edit","post","has","config","headers","push","errors","str","newErr","substring","lastIndexOf","indexOf","addExperience","put","addEducation","deleteExperience","expId","delete","deleteEducation","eduId","deleteAccount","window","confirm","getProfiles","getProfileById","profileId","getGithubRepos"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SACGC,WADH,EAEGC,cAFH,EAGGC,SAHH,EAIGC,cAJH,EAKGC,YALH,EAMGC,aANH,EAOGC,eAPH,EAQGC,aARH,QASO,SATP,C,CAWA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC/C,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEZ,WADD;AAELa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIF,GAND,CAOA,OAAMC,GAAN,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACAT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AAEJ,CAhBM,C,CAkBP;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAqBC,YAArB,EAAkCC,IAAI,GAAG,KAAzC,KAAmD,MAAMjB,QAAN,IAAkB;AAC9F,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC6B,IAAN,CAAW,mCAAX,EAA+CJ,QAA/C,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,cADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAE,IAAAA,OAAO,CAACC,GAAR;;AACA,QAAGQ,YAAY,CAACG,GAAb,CAAiB,cAAjB,CAAH,EAAoC;AACnC,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKC,YAAMhC,KAAK,CAAC6B,IAAN,CAAW,0CAAX,EAAsDF,YAAtD,EAAmEI,MAAnE,CAAN;AACD;;AAED,QAAG,CAACH,IAAJ,EAAS;AACRjB,MAAAA,QAAQ,CAACV,QAAQ,CAAC,iBAAD,EAAmB,SAAnB,CAAT,CAAR;AACAyB,MAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;AACC,KAHF,MAIK;AACJtB,MAAAA,QAAQ,CAACV,QAAQ,CAAC,gBAAD,EAAkB,SAAlB,CAAT,CAAR;AACC;AACJ,GAvBD,CAwBA,OAAMgB,GAAN,EAAU;AACN,QAAGA,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBkB,MAArB,EAA4B;AACxB,YAAMA,MAAM,GAACjB,GAAG,CAACG,QAAJ,CAAaJ,IAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYe,MAAM,CAACA,MAAnB;AACAvB,MAAAA,QAAQ,CAACV,QAAQ,CAACiC,MAAM,CAACA,MAAP,CAAc,CAAd,EAAiBb,GAAlB,EAAsB,QAAtB,CAAT,CAAR;AACH,KAJD,MAKI;AACA,YAAMc,GAAG,GAAGlB,GAAG,CAACG,QAAJ,CAAaJ,IAAzB;AACA,UAAIoB,MAAM,GAACD,GAAG,CAACE,SAAJ,CAAcF,GAAG,CAACG,WAAJ,CAAgB,QAAhB,IAA0B,CAAxC,EAA0CH,GAAG,CAACI,OAAJ,CAAY,MAAZ,CAA1C,CAAX;AACA5B,MAAAA,QAAQ,CAACV,QAAQ,CAACmC,MAAD,EAAQ,QAAR,CAAT,CAAR;AACH;AACJ;AAEJ,CAtCM,C,CAwCP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAACf,QAAD,EAAUC,OAAV,KAAsB,MAAMf,QAAN,IAAkB;AACjE,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACyC,GAAN,CAAU,8CAAV,EAAyDhB,QAAzD,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,cADA;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACV,QAAQ,CAAC,kBAAD,EAAoB,SAApB,CAAT,CAAR;AACCyB,IAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;AAEH,GAVD,CAWA,OAAMhB,GAAN,EAAU;AACN,UAAMiB,MAAM,GAAGjB,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBkB,MAAjC;;AAEA,QAAGA,MAAH,EAAU;AACVvB,MAAAA,QAAQ,CAACV,QAAQ,CAACiC,MAAM,CAAC,CAAD,CAAN,CAAUb,GAAX,EAAe,QAAf,CAAT,CAAR;AACC;;AAEDV,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMmB,YAAY,GAAG,CAACjB,QAAD,EAAUC,OAAV,KAAsB,MAAMf,QAAN,IAAkB;AAChE,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACyC,GAAN,CAAU,6CAAV,EAAwDhB,QAAxD,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,cADA;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACV,QAAQ,CAAC,iBAAD,EAAmB,SAAnB,CAAT,CAAR;AACCyB,IAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;AAEH,GAVD,CAWA,OAAMhB,GAAN,EAAU;AACN,UAAMiB,MAAM,GAAGjB,GAAG,CAACG,QAAJ,CAAaJ,IAAb,CAAkBkB,MAAjC;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;;AACA,QAAGc,MAAH,EAAU;AACVvB,MAAAA,QAAQ,CAACV,QAAQ,CAACiC,MAAM,CAAC,CAAD,CAAN,CAAUb,GAAX,EAAe,QAAf,CAAT,CAAR;AACC;;AAEDV,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMoB,gBAAgB,GAAIC,KAAD,IAAW,MAAMjC,QAAN,IAAkB;AACzD,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC6C,MAAN,CAAa,kDAAgDD,KAA7D,CAAlB;AACAjC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,cADA;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACV,QAAQ,CAAC,oBAAD,EAAsB,SAAtB,CAAT,CAAR;AAEF,GATD,CAUA,OAAMgB,GAAN,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACAT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMuB,eAAe,GAAIC,KAAD,IAAW,MAAMpC,QAAN,IAAkB;AACxD,MAAG;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC6C,MAAN,CAAa,iDAA+CE,KAA5D,CAAlB;AACApC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,cADA;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACV,QAAQ,CAAC,mBAAD,EAAqB,SAArB,CAAT,CAAR;AAEF,GATD,CAUA,OAAMgB,GAAN,EAAU;AACNN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMyB,aAAa,GAAG,MAAM,MAAMrC,QAAN,IAAkB;AAC7C,MAAGsC,MAAM,CAACC,OAAP,CAAgB,mFAAhB,CAAH,EAAuG;AACnG,QAAG;AACC,YAAMlD,KAAK,CAAC6C,MAAN,CAAa,mCAAb,CAAN;AACAlC,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEP;AAAP,OAAD,CAAR;AACAI,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAEN;AAAP,OAAD,CAAR;AACH,KAJD,CAKA,OAAMS,GAAN,EAAU;AACNN,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEL,aADD;AAELM,QAAAA,OAAO,EAAE;AAACM,UAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,UAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,OAAD,CAAR;AAIH;AACJ;AACR,CAdM,C,CAeP;;AACA,OAAO,MAAM4B,WAAW,GAAG,MAAM,MAAMxC,QAAN,IAAkB;AAC3CA,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;;AACA,MAAG;AACH,UAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,mCAAV,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACID,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,YADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAQA,OAAMC,GAAN,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACR,CAjBM,C,CAmBP;;AACA,OAAO,MAAM6B,cAAc,GAAIC,SAAD,IAAe,MAAM1C,QAAN,IAAkB;AAC3DA,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;;AACA,MAAG;AACH,UAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,4CAA0CwC,SAApD,CAAlB;AAEI1C,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEZ,WADD;AAELa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAQA,OAAMC,GAAN,EAAU;AACNN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAM+B,cAAc,GAAID,SAAD,IAAe,MAAM1C,QAAN,IAAkB;AAC3DA,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;;AACA,MAAG;AACH,UAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8CAA4CwC,SAAtD,CAAlB;AACI1C,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,SADD;AAELW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAOA,OAAMC,GAAN,EAAU;AACNN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAACM,QAAAA,GAAG,EAAGJ,GAAG,CAACG,QAAJ,CAAaE,UAApB;AAAgCC,QAAAA,MAAM,EAACN,GAAG,CAACG,QAAJ,CAAaG;AAApD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAfM","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from '../actions/alert'\r\nimport {\r\n   GET_PROFILE,\r\n   CREATE_PROFILE,\r\n   GET_REPOS,\r\n   UPDATE_PROFILE,\r\n   GET_PROFILES,\r\n   CLEAR_PROFILE,\r\n   ACCOUNT_DELETED,\r\n   PROFILE_ERROR\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const loadProfile = () => async dispatch => {\r\n    try{\r\n       const res = await axios.get('http://localhost:5000/api/profile/me')\r\n       dispatch({\r\n           type: GET_PROFILE,\r\n           payload: res.data\r\n       })\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n// Create and Update profile\r\n\r\nexport const createProfile = (formData, history , imageProfile,edit = false) => async dispatch => {\r\n    try{\r\n       const res = await axios.post('http://localhost:5000/api/profile',formData)\r\n       dispatch({\r\n           type: CREATE_PROFILE,\r\n           payload: res.data\r\n       })\r\n       console.log()\r\n       if(imageProfile.has('imageProfile')){\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n         await axios.post(\"http://localhost:5000/api/profile/upload\",imageProfile,config)\r\n       }\r\n\r\n       if(!edit){\r\n        dispatch(setAlert(\"Profile created\",'success'))\r\n        history.push('/dashboard')\r\n        }\r\n        else{\r\n        dispatch(setAlert(\"Profile edited\",'success'))\r\n        }\r\n    }\r\n    catch(err){\r\n        if(err.response.data.errors){\r\n            const errors=err.response.data\r\n            console.log(errors.errors)\r\n            dispatch(setAlert(errors.errors[0].msg,'danger'))\r\n        }\r\n        else{\r\n            const str = err.response.data\r\n            let newErr=str.substring(str.lastIndexOf(\"Error:\")+7,str.indexOf(\"<br>\"))\r\n            dispatch(setAlert(newErr,'danger'))\r\n        }\r\n    }   \r\n\r\n}\r\n\r\n// Add Experince\r\nexport const addExperience = (formData,history) => async dispatch => {\r\n    try{\r\n       const res = await axios.put('http://localhost:5000/api/profile/experience',formData)\r\n       dispatch({\r\n           type:UPDATE_PROFILE,\r\n           payload: res.data\r\n       })\r\n\r\n       dispatch(setAlert(\"Experience added\",'success'))\r\n        history.push('/dashboard')\r\n    \r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        \r\n        if(errors){\r\n        dispatch(setAlert(errors[0].msg,'danger'))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (formData,history) => async dispatch => {\r\n    try{\r\n       const res = await axios.put('http://localhost:5000/api/profile/education',formData)\r\n       dispatch({\r\n           type:UPDATE_PROFILE,\r\n           payload: res.data\r\n       })\r\n\r\n       dispatch(setAlert(\"Education added\",'success'))\r\n        history.push('/dashboard')\r\n    \r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        console.log(err.response)\r\n        if(errors){\r\n        dispatch(setAlert(errors[0].msg,'danger'))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n// Delete Experince\r\nexport const deleteExperience = (expId) => async dispatch => {\r\n    try{\r\n       const res = await axios.delete('http://localhost:5000/api/profile/experience/'+expId)\r\n       dispatch({\r\n           type:UPDATE_PROFILE,\r\n           payload: res.data\r\n       })\r\n\r\n       dispatch(setAlert(\"Experience deleted\",'success'))\r\n    \r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n// Delete Education\r\nexport const deleteEducation = (eduId) => async dispatch => {\r\n    try{\r\n       const res = await axios.delete('http://localhost:5000/api/profile/education/'+eduId)\r\n       dispatch({\r\n           type:UPDATE_PROFILE,\r\n           payload: res.data\r\n       })\r\n\r\n       dispatch(setAlert(\"Education deleted\",'success'))\r\n    \r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n        if(window.confirm(`Are you sure you want to delete your account? After that you can't UNDO operation`)){\r\n            try{\r\n                await axios.delete('http://localhost:5000/api/profile')\r\n                dispatch({type: CLEAR_PROFILE})\r\n                dispatch({type: ACCOUNT_DELETED})\r\n            }\r\n            catch(err){\r\n                dispatch({\r\n                    type: PROFILE_ERROR,\r\n                    payload: {msg : err.response.statusText, status:err.response.status}\r\n                });\r\n            }  \r\n        } \r\n}\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n        dispatch({type: CLEAR_PROFILE})\r\n        try{\r\n        const res = await axios.get('http://localhost:5000/api/profile')\r\n        console.log(res)\r\n            dispatch({\r\n                type: GET_PROFILES,\r\n                payload: res.data\r\n            })\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg : err.response.statusText, status:err.response.status}\r\n            });\r\n        }  \r\n}\r\n\r\n// Get profile by id\r\nexport const getProfileById = (profileId) => async dispatch => {\r\n    dispatch({type: CLEAR_PROFILE})\r\n    try{\r\n    const res = await axios.get('http://localhost:5000/api/profile/user/'+profileId)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }  \r\n}\r\n\r\n// Get repos of user\r\nexport const getGithubRepos = (profileId) => async dispatch => {\r\n    dispatch({type: CLEAR_PROFILE})\r\n    try{\r\n    const res = await axios.get('http://localhost:5000/api/profile/github/'+profileId)\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}