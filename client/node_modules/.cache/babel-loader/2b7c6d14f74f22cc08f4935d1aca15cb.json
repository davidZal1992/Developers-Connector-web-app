{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\posts\\\\post-item\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { addLike, removeLike, deletePost } from '../../../actions/posts';\n\nconst PostItem = ({\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  auth,\n  addLike,\n  removeLike\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts bg-white my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date>\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, \"Poste on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 60\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light\",\n    onClick: addLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }), likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }\n  }, \" \", likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: removeLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/post/${_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, \"Discussion\", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }\n  }, \" \", comments.length)), !auth.loading && user._id === _id && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })))));\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/posts/post-item/PostItem.js"],"names":["React","Fragment","connect","Link","Moment","PropTypes","addLike","removeLike","deletePost","PostItem","post","_id","text","name","avatar","user","likes","comments","date","auth","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport {addLike,removeLike,deletePost} from '../../../actions/posts'\r\n\r\n\r\nconst PostItem = ({\r\n    post:{_id,text,name,avatar,user,likes,comments,date},\r\n    auth,\r\n    addLike,\r\n    removeLike}) => {\r\n    return (\r\n        <Fragment>\r\n                <div className=\"posts bg-white my-1\">\r\n                        <div>\r\n                            <Link to='/profiles'>\r\n                                <img className=\"round-img\" src={avatar} alt=\"\"></img>\r\n                                <h4>{name}</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p className='my-1'>\r\n                                {text}\r\n                            </p>\r\n                            <p class='post-date>'>Poste on <Moment format=\"DD/MM/YYYY\">{date}</Moment></p>\r\n                            <button className=\"btn btn-light\" onClick={addLike(_id)}>\r\n                                <i className=\"fas fa-thumbs-up\"></i>\r\n                                {likes.length>0 && \r\n                                (<span className='comment-count'> {likes.length}</span>)\r\n                                }\r\n                            </button>\r\n                            <button type='button' className=\"btn btn-light\" onClick={removeLike(_id)}>\r\n                                <i className=\"fas fa-thumbs-down\"></i>\r\n                            </button>\r\n                            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\r\n                                Discussion\r\n                                {comments.length>0 && \r\n                                (<span className='comment-count'> {comments.length}</span>)\r\n                                }\r\n                            </Link>\r\n                            {!auth.loading && user._id===_id && \r\n                            (<button type='button' className=\"btn btn-danger\">\r\n                                <i className=\"fas fa-times\"></i>\r\n                            </button>\r\n                            )}\r\n                        </div>\r\n                </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post:PropTypes.object.isRequired,\r\n  auth:PropTypes.object.isRequired,\r\n  addLike:PropTypes.func.isRequired,\r\n  removeLike:PropTypes.func.isRequired,\r\n  deletePost:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{addLike,removeLike,deletePost})(PostItem)\r\n"]},"metadata":{},"sourceType":"module"}