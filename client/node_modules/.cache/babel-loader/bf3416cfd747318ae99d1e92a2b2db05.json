{"ast":null,"code":"import { GET_POSTS, GET_POST, POST_ERROR, CREATE_POST, DELETE_POST, UPDATE_LIKES, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case CREATE_POST:\n      return { ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.postId ? { ...post,\n          likes: payload.likes\n        } : post)\n      };\n\n    case REMOVE_COMMENT:\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/DevConnectors/client/src/reducers/post.js"],"names":["GET_POSTS","GET_POST","POST_ERROR","CREATE_POST","DELETE_POST","UPDATE_LIKES","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","postId","likes","comments"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAuCC,WAAvC,EAAmDC,WAAnD,EAA+DC,YAA/D,EAA4EC,WAA5E,EAAyFC,cAAzF,QAA8G,kBAA9G;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAC,EADY;AAElBC,EAAAA,IAAI,EAAC,IAFa;AAGlBC,EAAAA,OAAO,EAAE,IAHS;AAIlBC,EAAAA,KAAK,EAAE;AAJW,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAsC;AACjD,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBF,MAAvB;;AACA,UAAOC,IAAP;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,IAAI,EAACM,OAFF;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAgBO,OAAhB,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBT,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,MAArB,GAA8B,EAAC,GAAGV,IAAJ;AAAUW,UAAAA,KAAK,EAACL,OAAO,CAACK;AAAxB,SAA9B,GAA+DX,IAAzF;AAFJ,OAAP;;AAIJ,SAAKH,cAAL;AACA,SAAKD,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,IAAI,EAAE,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAgBY,UAAAA,QAAQ,EAACN;AAAzB,SAFH;AAGHL,QAAAA,OAAO,EAAG;AAHP,OAAP;;AAKJ,SAAKT,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOE,KAAP;AA5CR;AA8CH","sourcesContent":["import {GET_POSTS,GET_POST, POST_ERROR,CREATE_POST,DELETE_POST,UPDATE_LIKES,ADD_COMMENT, REMOVE_COMMENT} from '../actions/types'\r\n\r\nconst initialState = {\r\n   posts:[],\r\n   post:null,\r\n   loading: true,\r\n   error: {}\r\n}\r\n\r\n\r\nexport default function(state = initialState ,action){\r\n    const {type,payload} = action;\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post:payload,\r\n                loading: false\r\n            }\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,payload],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) => post._id === payload.postId ? {...post, likes:payload.likes} : post),\r\n            }\r\n        case REMOVE_COMMENT:\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {...state.post, comments:payload} ,\r\n                loading : false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}