{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\profile\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../../spinner/Spinner';\nimport { getProfileById } from '../../../actions/profile';\n\nconst Profile = ({\n  match,\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth: {\n    isAuthenticated,\n    user: {\n      _id\n    }\n  }\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 43\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \" Back to profiles\"), \"`\", isAuthenticated !== null && _id === match.params.id && /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-primary\",\n    to: \"/edit-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 71\n    }\n  }, \"Edit profile\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/profile/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","getProfileById","Profile","match","profile","loading","auth","isAuthenticated","user","_id","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOF,EAAAA,cAAP;AAAuBG,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAhC;AAAmDC,EAAAA,IAAI,EAAC;AAACC,IAAAA,eAAD;AAAiBC,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD;AAAtB;AAAxD,CAAD,KAA2F;AACvGb,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,cAAc,CAACE,KAAK,CAACO,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEP,CAACV,cAAD,CAFO,CAAT;AAGA,sBACI;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,KAAG,IAAV,IAAkBC,OAAlB,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gBACD,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAG,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,OAEKE,eAAe,KAAK,IAApB,IAA4BE,GAAG,KAAGN,KAAK,CAACO,MAAN,CAAaC,EAA/C,iBAAqD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,EAAE,EAAC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAF1D,CAFJ,CADJ;AAUH,CAdD;;AAiBAT,OAAO,CAACU,SAAR,GAAoB;AAChBX,EAAAA,cAAc,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UADf;AAEhBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAFV;AAGhBR,EAAAA,IAAI,EAAET,SAAS,CAACkB,MAAV,CAAiBD;AAHP,CAApB;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADiB;AAEhCE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,OAA3C,CAAf","sourcesContent":["import React, { Fragment,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect } from 'react-redux'\r\nimport Spinner from '../../spinner/Spinner';\r\nimport {getProfileById} from '../../../actions/profile'\r\n\r\nconst Profile = ({match,getProfileById, profile: {profile,loading} ,auth:{isAuthenticated,user:{_id}}}) => {\r\n    useEffect(() =>{\r\n        getProfileById(match.params.id)\r\n    },[getProfileById])\r\n    return (\r\n        <section className=\"container\">\r\n            {profile===null || loading ? (<Spinner/>) :(\r\n            <Fragment className=\"container\">\r\n                <Link to=\"/profiles\" className = \"btn btn-light\"> Back to profiles</Link>`\r\n                {isAuthenticated !== null && _id===match.params.id && <Link className=\"btn btn-primary\" to=\"/edit-profile\">Edit profile</Link>}\r\n            </Fragment>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {getProfileById})(Profile)\r\n"]},"metadata":{},"sourceType":"module"}