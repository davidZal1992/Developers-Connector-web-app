{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport { GET_POSTS, CREATE_POST, DELETE_POST, UPDATE_LIKES, POST_ERROR } from './types'; //Create post\n\nexport const createPost = post => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log(post);\n    const res = await axios.post('http://localhost:5000/api/posts', post, config);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post succesfully create', 'sucess'));\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create post\n\nexport const getPosts = () => async dispatch => {\n  try {\n    console.log('ab');\n    const res = await axios.get('http://localhost:5000/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:5000/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:5000/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n    dispatch(setAlert(\"Post deleted\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/DevConnectors/client/src/actions/posts.js"],"names":["axios","setAlert","GET_POSTS","CREATE_POST","DELETE_POST","UPDATE_LIKES","POST_ERROR","createPost","post","dispatch","config","headers","console","log","res","type","payload","data","err","response","msg","statusText","status","getPosts","get","addLike","postId","put","likes","removeLike","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from '../actions/alert';\r\n\r\nimport {\r\n    GET_POSTS,\r\n    CREATE_POST,\r\n    DELETE_POST,\r\n    UPDATE_LIKES,\r\n    POST_ERROR\r\n} from './types';\r\n\r\n\r\n//Create post\r\nexport const createPost = (post) => async dispatch => {\r\n    try{\r\n       const config ={\r\n           headers:{\r\n               'Content-Type': 'application/json'\r\n           }\r\n       }\r\n       console.log(post)\r\n       const res = await axios.post('http://localhost:5000/api/posts',post,config)\r\n\r\n       dispatch({\r\n        type: CREATE_POST,\r\n        payload:res.data\r\n        });\r\n\r\n        dispatch( \r\n            setAlert('Post succesfully create','sucess')\r\n        )\r\n\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n\r\n//Create post\r\nexport const getPosts = () => async dispatch => {\r\n    try{\r\n      console.log('ab')\r\n       const res = await axios.get('http://localhost:5000/api/posts')\r\n       dispatch({\r\n           type: GET_POSTS,\r\n           payload: res.data\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        console.log(err.response)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n\r\n}\r\n\r\n\r\n//Add like\r\nexport const addLike = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.put(`http://localhost:5000/api/posts/like/${postId}`)\r\n       dispatch({\r\n           type: UPDATE_LIKES,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n//Remove like\r\nexport const removeLike = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.put(`http://localhost:5000/api/posts/unlike/${postId}`)\r\n       dispatch({\r\n           type: UPDATE_LIKES,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n        \r\n       )\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n//Delete post\r\nexport const deletePost = (postId) => async dispatch => {\r\n    try{\r\n       const res = await axios.delete(`http://localhost:5000/api/posts/${postId}`)\r\n       dispatch({\r\n           type: DELETE_POST,\r\n           payload: {postId,likes:res.data}\r\n       }\r\n       )\r\n       dispatch(setAlert(\"Post deleted\",'success'))\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }   \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}