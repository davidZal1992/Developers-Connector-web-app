{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevConnectors\\\\client\\\\src\\\\components\\\\posts\\\\post-item\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { addLike, removeLike, deletePost } from '../../../actions/posts';\nimport './PostItems.css';\n\nconst PostItem = ({\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  auth,\n  addLike,\n  deletePost,\n  showActions,\n  removeLike\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white my-1 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date>\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Poste on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 64\n    }\n  }, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light\",\n    onClick: e => addLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }), likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }\n  }, \" \", likes.length)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: e => removeLike(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/post/${_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \"Discussion\", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }\n  }, \" \", comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: e => deletePost(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }))))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["D:/DevConnectors/client/src/components/posts/post-item/PostItem.js"],"names":["React","Fragment","connect","Link","Moment","PropTypes","addLike","removeLike","deletePost","PostItem","post","_id","text","name","avatar","user","likes","comments","date","auth","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport {addLike,removeLike,deletePost} from '../../../actions/posts'\r\nimport './PostItems.css'\r\n\r\nconst PostItem = ({\r\n    post:{_id,text,name,avatar,user,likes,comments,date},\r\n    auth,\r\n    addLike,\r\n    deletePost,\r\n    showActions,\r\n    removeLike}) => {\r\n    return (\r\n        <Fragment>\r\n                <div className=\"post bg-white my-1 p-1\">\r\n                        <div>\r\n                            <Link to='/profiles'>\r\n                                <img className=\"round-img\" src={avatar} alt=\"\"></img>\r\n                                <h4>{name}</h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p className='my-1'>\r\n                                {text}\r\n                            </p>\r\n                            <p className='post-date>'>Poste on <Moment format=\"DD/MM/YYYY\">{date}</Moment></p>\r\n                            {showActions && \r\n                            <Fragment>\r\n                                <button className=\"btn btn-light\" onClick={(e) => addLike(_id)}>\r\n                                    <i className=\"fas fa-thumbs-up\"></i>\r\n                                    {likes.length>0 && \r\n                                    (<span className='comment-count'> {likes.length}</span>)\r\n                                    }\r\n                                </button>\r\n                                <button type='button' className=\"btn btn-light\" onClick={(e) => removeLike(_id)}>\r\n                                    <i className=\"fas fa-thumbs-down\"></i>\r\n                                </button>\r\n                                <Link to={`/posts/post/${_id}`} className=\"btn btn-primary\">\r\n                                    Discussion\r\n                                    {comments.length>0 && \r\n                                    (<span className='comment-count'> {comments.length}</span>)\r\n                                    }\r\n                                </Link>\r\n                                {!auth.loading && user === auth.user._id && \r\n                                (<button type='button' className=\"btn btn-danger\" onClick={(e) => deletePost(_id)} >\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                </button>\r\n                                )}\r\n                            </Fragment>}\r\n                        </div>\r\n                </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n    showActions:true\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post:PropTypes.object.isRequired,\r\n  auth:PropTypes.object.isRequired,\r\n  addLike:PropTypes.func.isRequired,\r\n  removeLike:PropTypes.func.isRequired,\r\n  deletePost:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{addLike,removeLike,deletePost})(PostItem)\r\n"]},"metadata":{},"sourceType":"module"}